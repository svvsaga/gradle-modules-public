name: Publish packages
on:
  push:
    branches:
      - main

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
jobs:
  find-module-changes:
    name: Find module changes
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Bump semantic version
        uses: svvsaga/github-actions-public/bump-semver-tag@v20.0.2
        id: bump-semver-tag

      - name: Find module changes
        id: find-module-changes
        if: ${{ steps.bump-semver-tag.outputs.tag != '' }}
        uses: svvsaga/github-actions-public/find-gradle-module-changes@v20.0.2
        with:
          include_all: ${{ github.event.inputs.include_all }}
          ignore_modules: ./example,.

    outputs:
      matrix: ${{ steps.find-module-changes.outputs.matrix }}
      has_results: ${{ steps.find-module-changes.outputs.has_results }}
      tag: ${{ steps.bump-semver-tag.outputs.tag }}
      version: ${{ steps.bump-semver-tag.outputs.version }}

  publish-packages:
    name: Publish packages
    needs: find-module-changes
    runs-on: ubuntu-latest
    if: needs.find-module-changes.outputs.has_results == 'true'
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.find-module-changes.outputs.matrix) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Google Cloud SDK
        uses: svvsaga/github-actions-public/setup-gcloud@v20.0.2
        with:
          service_account_key: ${{ secrets.GCP_SA_ARTIFACT_PUBLISHER }}

      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Publish packages
        run: ./gradlew test publish -PreleaseVersion=${{ needs.find-module-changes.outputs.version }} --parallel
        working-directory: ${{ matrix.path }}

  push-tag:
    name: Push tag
    needs: find-module-changes
    runs-on: ubuntu-latest
    if: needs.find-module-changes.outputs.has_results == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Push tag
        if: ${{ needs.find-module-changes.outputs.tag != '' }}
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git tag ${{ needs.find-module-changes.outputs.tag }}
          git push origin ${{ needs.find-module-changes.outputs.tag }}
